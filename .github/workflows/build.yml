name: Build and Push ZeroClue Docker Images

on:
  workflow_dispatch:
    inputs:
      targets:
        description: 'Build targets (comma-separated): base,slim,minimal,production,ultra-slim'
        required: false
        default: 'base,slim,minimal,production,ultra-slim'
      cuda_versions:
        description: 'CUDA versions (comma-separated): 12-4,12-5,12-6,12-8,12-9,13-0'
        required: false
        default: '12-6,12-8'
  # schedule:
  #   - cron: "0 */8 * * *"
  push:
    branches: [main]
    paths:
      - 'Dockerfile'
      - 'docker-bake.hcl'
      - 'scripts/**'
      - 'custom_nodes.txt'

jobs:
  bake:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Existing variants
          - target: base
            cuda: 12-6
          - target: base
            cuda: 12-8
          - target: slim
            cuda: 12-6
          - target: slim
            cuda: 12-8
          - target: minimal
            cuda: 12-6
          - target: minimal
            cuda: 12-8
          # New production variants
          - target: production
            cuda: 12-6
          - target: production
            cuda: 12-8
          # New ultra-slim variants
          - target: ultra-slim
            cuda: 12-6
          - target: ultra-slim
            cuda: 12-8
    steps:
      - name: Check if should run
        run: |
          TARGETS="${{ github.event.inputs.targets || 'base,slim,minimal,production,ultra-slim' }}"
          CUDA="${{ github.event.inputs.cuda_versions || '12-6,12-8' }}"

          if [[ ",$TARGETS," != *",${{ matrix.target }},"* ]]; then
            echo "SKIP_BUILD=true" >> $GITHUB_ENV
            echo "Skipping ${{ matrix.target }}-${{ matrix.cuda }} (not in targets list)"
          elif [[ ",$CUDA," != *",${{ matrix.cuda }},"* ]]; then
            echo "SKIP_BUILD=true" >> $GITHUB_ENV
            echo "Skipping ${{ matrix.target }}-${{ matrix.cuda }} (not in CUDA list)"
          else
            echo "Building ${{ matrix.target }}-${{ matrix.cuda }}"
          fi

      - name: Maximize build space
        if: env.SKIP_BUILD != 'true'
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          remove-large-packages: 'true'
          remove-cached-tools: 'true'
          remove-swapfile: 'true'

      - name: Checkout
        if: env.SKIP_BUILD != 'true'
        uses: actions/checkout@v4

      - name: Docker login
        if: env.SKIP_BUILD != 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        if: env.SKIP_BUILD != 'true'
        uses: docker/setup-buildx-action@v3

      - name: Get current date
        if: env.SKIP_BUILD != 'true'
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Build and push
        if: env.SKIP_BUILD != 'true'
        uses: docker/bake-action@v6
        with:
          targets: ${{ matrix.target }}-${{ matrix.cuda }}
          push: true

      - name: Build summary
        if: env.SKIP_BUILD != 'true'
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Target**: ${{ matrix.target }}" >> $GITHUB_STEP_SUMMARY
          echo "- **CUDA Version**: ${{ matrix.cuda }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: zeroclue/comfyui" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Date**: ${{ steps.date.outputs.date }}" >> $GITHUB_STEP_SUMMARY